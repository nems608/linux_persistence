#!/usr/bin/python
import subprocess, os, threading, time, itertools


def scoreboard():
    os.system('clear')
    print('[Beacons]'.center(150))
    for host in valid_entries('beacons.out'):
        print('%s: %d' % (host[0][1], len(host)))
    print('\n[Listeners]'.center(149))
    for host in valid_entries('listeners.out'):
        print('%s: %d' % (host[0][1], len(host)))
    print('\n[SSH Login]'.center(149))
    for host in valid_entries('ssh.out'):
        root = sum(1 for entry in host if entry[2] == '[root]')
        print('%s: Root: %d\tUser: %d' % (host[0][1], root, len(host) - root))
    threading.Timer(60, scoreboard).start()
    

def valid_entries(path):
    f = open(path, 'r')
    f.seek(0)
    entries = f.readlines()
    entries = [entry.split(':') for entry in entries]
    f.close()
    t = time.time()
    entries = filter(lambda e: t - int(e[0]) < 60, entries)
    entries.sort(key=lambda e: e[1])
    entries = [list (g) for k, g in itertools.groupby(entries, lambda e: e[1])]
    return entries


if __name__ == '__main__':
    subprocess.Popen('stdbuf -oL ./beacon_server > beacons.out', shell=True)
    subprocess.call('python persist', shell=True)
    subprocess.call('stdbuf -oL ./solicitor > listeners.out', shell=True)
    subprocess.call('stdbuf -oL ./ssh_checker > ssh.out', shell=True)
    threading.Timer(60, scoreboard).start()
